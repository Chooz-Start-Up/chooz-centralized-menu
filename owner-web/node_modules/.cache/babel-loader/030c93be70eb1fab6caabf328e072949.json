{"ast":null,"code":"var _jsxFileName = \"/mnt/d/ProjectChooz/chooz-centralized-menu/owner-web/src/component/main_objects/MenuColumnList.tsx\";\nimport * as React from \"react\";\nimport { Divider, Grid, List, ListItem } from \"@mui/material/\";\nimport AddButtonWithDialog from \"../buttons/AddButtonWithDialog\";\nimport ColumnListItemButton from \"../buttons/ColumnListItemButton\";\nimport { CategoryColumnList } from \"./CategoryColumnList\";\nimport { ItemColumnList } from \"./ItemColumnList\";\nimport ItemColumnPage from \"./ItemColumnPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class MenuColumnList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validateMenuIndexBeforeRender = () => {\n      if (this.state.selectedMenuIndex < this.state.menuItems.length) {\n        return this.state.selectedMenuIndex;\n      } else {\n        return -1;\n      }\n    };\n\n    this.validateCategoryIndexBeforeRender = () => {\n      if (this.validateMenuIndexBeforeRender() !== -1 && this.state.selectedCategoryIndex < this.state.menuItems[this.state.selectedMenuIndex].categoryItems.length) {\n        return this.state.selectedCategoryIndex;\n      } else {\n        return -1;\n      }\n    };\n\n    this.validateItemIndexBeforeRender = () => {\n      if (this.validateMenuIndexBeforeRender() !== -1 && this.validateCategoryIndexBeforeRender() !== -1 && this.state.selectedItemIndex < this.state.menuItems[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items.length) {\n        return this.state.selectedItemIndex;\n      } else {\n        return -1;\n      }\n    };\n\n    this.setSelectedMenuIndex = index => {\n      if (index !== undefined) {\n        this.setState(() => {\n          console.log(\"Updating index to \", index);\n          return {\n            selectedMenuIndex: index,\n            selectedCategoryIndex: 0,\n            selectedItemIndex: 0\n          };\n        });\n      } else {\n        return this.state.selectedMenuIndex;\n      }\n    };\n\n    this.setSelectedCategoryIndex = index => {\n      if (index !== undefined) {\n        this.setState(() => {\n          console.log(\"From local setSelectedCategoryIndex\");\n          return {\n            selectedCategoryIndex: index,\n            selectedItemIndex: 0\n          };\n        });\n      } else {\n        return this.state.selectedCategoryIndex;\n      }\n    };\n\n    this.setSelectedItemIndex = index => {\n      if (index !== undefined) {\n        this.setState(() => {\n          console.log(\"From local setSelectedItemIndex\");\n          return {\n            selectedItemIndex: index\n          };\n        });\n      } else {\n        return this.state.selectedItemIndex;\n      }\n    };\n\n    this.updateText = e => {\n      console.log(\"Text in textfield: \", e.target.value);\n      this.setState(() => {\n        return {\n          addingItemName: e.target.value\n        };\n      });\n    };\n\n    this.validateText = () => {\n      const emptyTextfieldErrorMsg = \"Name field cannot be empty.\";\n      return this.state.addingItemName === \"\" ? emptyTextfieldErrorMsg : \"\";\n    };\n\n    this.handleMenuAddClick = () => {\n      this.setState(() => {\n        const items = this.state.menuItems.concat({\n          id: this.state.menuItems.length,\n          name: this.state.addingItemName,\n          handleDeleteClick: this.handleMenuDeleteClick,\n          categoryItems: []\n        });\n        return {\n          menuItems: items\n        };\n      });\n    };\n\n    this.handleMenuAddRetrieveText = e => {\n      e.preventDefault();\n      console.log(this.state.addingItemName);\n      this.handleMenuAddClick();\n      this.setState(() => {\n        return {\n          addingItemName: \"\"\n        };\n      });\n    };\n\n    this.handleMenuDeleteClick = id => {\n      const array = this.state.menuItems;\n      let newArray = array.filter(function logic(element) {\n        return element.id !== id;\n      });\n\n      for (let i = 0; i < newArray.length; i++) {\n        newArray[i].id = i;\n      }\n\n      this.setState(() => {\n        return {\n          selectedItemIndex: -1,\n          selectedCategoryIndex: -1,\n          selectedMenuIndex: -1,\n          menuItems: newArray\n        };\n      });\n      console.log(this.state.selectedItemIndex, \" \", this.state.selectedCategoryIndex, \" \", this.state.selectedMenuIndex);\n    };\n\n    this.handleMenuEditClick = () => {\n      this.setState(() => {\n        const items = this.state.menuItems;\n        items[this.state.selectedMenuIndex].name = this.state.addingItemName;\n        return {\n          menuItems: items\n        };\n      });\n    };\n\n    this.handleMenuEditRetrieveText = e => {\n      e.preventDefault();\n      console.log(this.state.addingItemName);\n      this.handleMenuEditClick();\n      this.setState(() => {\n        return {\n          addingItemName: \"\"\n        };\n      });\n    };\n\n    this.handleCategoryAddClick = () => {\n      this.setState(() => {\n        const items = this.state.menuItems[this.state.selectedMenuIndex].categoryItems.concat({\n          id: this.state.menuItems[this.state.selectedMenuIndex].categoryItems.length,\n          name: this.state.addingItemName,\n          handleDeleteClick: this.handleCategoryDeleteClick,\n          items: []\n        });\n        const updatingMenuItems = this.state.menuItems;\n        updatingMenuItems[this.state.selectedMenuIndex].categoryItems = items;\n        return {\n          menuItems: updatingMenuItems\n        };\n      });\n    };\n\n    this.handleCategoryAddRetrieveText = e => {\n      e.preventDefault();\n      console.log(this.state.addingItemName);\n      this.handleCategoryAddClick();\n      this.setState(() => {\n        return {\n          addingItemName: \"\"\n        };\n      });\n    };\n\n    this.handleCategoryDeleteClick = id => {\n      const array = this.state.menuItems[this.state.selectedMenuIndex].categoryItems;\n      let newArray = array.filter(function logic(element) {\n        console.log(element.id, \"---\", id);\n        return element.id !== id;\n      });\n\n      for (let i = 0; i < newArray.length; i++) {\n        newArray[i].id = i;\n      }\n\n      const updatingMenuItems = this.state.menuItems;\n      updatingMenuItems[this.state.selectedMenuIndex].categoryItems = newArray;\n      this.setState(() => {\n        return {\n          menuItems: updatingMenuItems\n        };\n      });\n    };\n\n    this.handleCategoryEditClick = () => {\n      this.setState(() => {\n        const items = this.state.menuItems;\n        items[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].name = this.state.addingItemName;\n        return {\n          menuItems: items\n        };\n      });\n    };\n\n    this.handleCategoryEditRetrieveText = e => {\n      e.preventDefault();\n      console.log(this.state.addingItemName);\n      this.handleCategoryEditClick();\n      this.setState(() => {\n        return {\n          addingItemName: \"\"\n        };\n      });\n    };\n\n    this.handleItemAddClick = () => {\n      this.setState(() => {\n        const items = this.state.menuItems[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items.concat({\n          id: this.state.menuItems[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items.length,\n          name: this.state.addingItemName,\n          handleDeleteClick: this.handleItemDeleteClick,\n          description: \"\",\n          price: 0,\n          ingredients: \"\"\n        });\n        const updatingMenuItems = this.state.menuItems;\n        updatingMenuItems[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items = items;\n        return {\n          menuItems: updatingMenuItems\n        };\n      });\n    };\n\n    this.handleItemAddRetrieveText = e => {\n      e.preventDefault();\n      console.log(this.state.addingItemName);\n      this.handleItemAddClick();\n      this.setState(() => {\n        return {\n          addingItemName: \"\"\n        };\n      });\n    };\n\n    this.handleItemDeleteClick = id => {\n      const array = this.state.menuItems[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items;\n      let newArray = array.filter(function logic(element) {\n        console.log(element.id, \"---\", id);\n        return element.id !== id;\n      });\n\n      for (let i = 0; i < newArray.length; i++) {\n        newArray[i].id = i;\n      }\n\n      const updatingMenuItems = this.state.menuItems;\n      updatingMenuItems[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items = newArray;\n      this.setState(() => {\n        return {\n          menuItems: updatingMenuItems\n        };\n      });\n    };\n\n    this.handleItemEditClick = () => {\n      this.setState(() => {\n        const items = this.state.menuItems;\n        items[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items[this.state.selectedItemIndex].name = this.state.addingItemName;\n        return {\n          menuItems: items\n        };\n      });\n    };\n\n    this.handleItemEditRetrieveText = e => {\n      e.preventDefault();\n      console.log(this.state.addingItemName);\n      this.handleItemEditClick();\n      this.setState(() => {\n        return {\n          addingItemName: \"\"\n        };\n      });\n    };\n\n    this.checkItemUpdate = item => {\n      this.setState(() => {\n        let newArray = this.state.menuItems;\n        newArray[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items[this.state.selectedItemIndex] = item;\n        return {\n          menuItems: newArray\n        };\n      });\n    };\n\n    this.state = {\n      addingItemName: \"\",\n      menuItems: [],\n      selectedMenuIndex: 0,\n      selectedCategoryIndex: 0,\n      selectedItemIndex: 0\n    };\n    console.log(\"This is constuctor\");\n  } // static getDerivedStateFromProps(\n  //   props: MenuColumnListProps,\n  //   state: MenuColumnListState\n  // ) {\n  //   console.log(\"This is getDerivedStateFromProps\");\n  //   return state;\n  // }\n  // Validator to hide or show columns\n\n\n  render() {\n    console.log(this.state.selectedMenuIndex, \" \", this.state.selectedCategoryIndex, \" \", this.state.selectedItemIndex);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        bgcolor: \"#ffebee\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            component: \"nav\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(ColumnListItemButton, {\n                deleteDialogTitle: \"Are you sure you want to delete the menu?\",\n                deleteDialogLabel: \"All items in the menu will be deleted as well.\",\n                editDialogTitle: \"Enter New Menu Name\",\n                editDialogLabel: \"New Menu Name\",\n                items: this.state.menuItems,\n                handleDeleteClick: this.handleMenuDeleteClick,\n                handleEditRetrieveText: this.handleMenuEditRetrieveText,\n                updateText: this.updateText,\n                validateText: this.validateText,\n                setSelectedColumnIndex: this.setSelectedMenuIndex\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                disablePadding: true,\n                alignItems: \"center\",\n                children: /*#__PURE__*/_jsxDEV(AddButtonWithDialog, {\n                  title: \"Enter Menu Name\",\n                  label: \"Menu Name\",\n                  handleAddRetrieveText: this.handleMenuAddRetrieveText,\n                  updateText: this.updateText,\n                  validateText: this.validateText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          orientation: \"vertical\",\n          variant: \"middle\",\n          flexItem: true,\n          sx: {\n            height: \"100vh\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), this.validateMenuIndexBeforeRender() !== -1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(CategoryColumnList, {\n              categoryItems: this.state.menuItems[this.state.selectedMenuIndex].categoryItems,\n              handleCategoryAddRetrieveText: this.handleCategoryAddRetrieveText,\n              handleCategoryDeleteClick: this.handleCategoryDeleteClick,\n              handleCategoryEditRetrieveText: this.handleCategoryEditRetrieveText,\n              updateText: this.updateText,\n              validateText: this.validateText,\n              setSelectedCategoryIndex: this.setSelectedCategoryIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            orientation: \"vertical\",\n            variant: \"middle\",\n            flexItem: true,\n            sx: {\n              height: \"100vh\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), this.validateCategoryIndexBeforeRender() !== -1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(ItemColumnList, {\n              itemItems: this.state.menuItems[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items,\n              handleItemAddRetrieveText: this.handleItemAddRetrieveText,\n              handleItemDeleteClick: this.handleItemDeleteClick,\n              handleItemEditRetrieveText: this.handleItemEditRetrieveText,\n              updateText: this.updateText,\n              validateText: this.validateText,\n              setSelectedItemIndex: this.setSelectedItemIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            orientation: \"vertical\",\n            variant: \"middle\",\n            flexItem: true,\n            sx: {\n              height: \"100vh\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), this.validateItemIndexBeforeRender() !== -1 && /*#__PURE__*/_jsxDEV(Grid, {\n          padding: 5,\n          item: true,\n          xs: 2.9,\n          children: /*#__PURE__*/_jsxDEV(ItemColumnPage, {\n            item: this.state.menuItems[this.state.selectedMenuIndex].categoryItems[this.state.selectedCategoryIndex].items[this.state.selectedItemIndex],\n            checkItemUpdate: this.checkItemUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"names":["React","Divider","Grid","List","ListItem","AddButtonWithDialog","ColumnListItemButton","CategoryColumnList","ItemColumnList","ItemColumnPage","MenuColumnList","Component","constructor","props","validateMenuIndexBeforeRender","state","selectedMenuIndex","menuItems","length","validateCategoryIndexBeforeRender","selectedCategoryIndex","categoryItems","validateItemIndexBeforeRender","selectedItemIndex","items","setSelectedMenuIndex","index","undefined","setState","console","log","setSelectedCategoryIndex","setSelectedItemIndex","updateText","e","target","value","addingItemName","validateText","emptyTextfieldErrorMsg","handleMenuAddClick","concat","id","name","handleDeleteClick","handleMenuDeleteClick","handleMenuAddRetrieveText","preventDefault","array","newArray","filter","logic","element","i","handleMenuEditClick","handleMenuEditRetrieveText","handleCategoryAddClick","handleCategoryDeleteClick","updatingMenuItems","handleCategoryAddRetrieveText","handleCategoryEditClick","handleCategoryEditRetrieveText","handleItemAddClick","handleItemDeleteClick","description","price","ingredients","handleItemAddRetrieveText","handleItemEditClick","handleItemEditRetrieveText","checkItemUpdate","item","render","height"],"sources":["/mnt/d/ProjectChooz/chooz-centralized-menu/owner-web/src/component/main_objects/MenuColumnList.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Box,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  Paper,\r\n} from \"@mui/material/\";\r\nimport {\r\n  ItemProps,\r\n  MenuColumnListProps,\r\n  MenuColumnListState,\r\n} from \"./interface\";\r\nimport AddButtonWithDialog from \"../buttons/AddButtonWithDialog\";\r\nimport ColumnListItemButton from \"../buttons/ColumnListItemButton\";\r\nimport { CategoryColumnList } from \"./CategoryColumnList\";\r\nimport { ItemColumnList } from \"./ItemColumnList\";\r\nimport ItemColumnPage from \"./ItemColumnPage\";\r\n\r\nexport class MenuColumnList extends React.Component<\r\n  MenuColumnListProps,\r\n  MenuColumnListState\r\n> {\r\n  constructor(props: MenuColumnListProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      addingItemName: \"\",\r\n      menuItems: [],\r\n      selectedMenuIndex: 0,\r\n      selectedCategoryIndex: 0,\r\n      selectedItemIndex: 0,\r\n    };\r\n\r\n    console.log(\"This is constuctor\");\r\n  }\r\n\r\n  // static getDerivedStateFromProps(\r\n  //   props: MenuColumnListProps,\r\n  //   state: MenuColumnListState\r\n  // ) {\r\n  //   console.log(\"This is getDerivedStateFromProps\");\r\n\r\n  //   return state;\r\n  // }\r\n\r\n  // Validator to hide or show columns\r\n  validateMenuIndexBeforeRender = (): number => {\r\n    if (this.state.selectedMenuIndex < this.state.menuItems.length) {\r\n      return this.state.selectedMenuIndex;\r\n    } else {\r\n      return -1;\r\n    }\r\n  };\r\n  validateCategoryIndexBeforeRender = (): number => {\r\n    if (\r\n      this.validateMenuIndexBeforeRender() !== -1 &&\r\n      this.state.selectedCategoryIndex <\r\n        this.state.menuItems[this.state.selectedMenuIndex].categoryItems.length\r\n    ) {\r\n      return this.state.selectedCategoryIndex;\r\n    } else {\r\n      return -1;\r\n    }\r\n  };\r\n  validateItemIndexBeforeRender = (): number => {\r\n    if (\r\n      this.validateMenuIndexBeforeRender() !== -1 &&\r\n      this.validateCategoryIndexBeforeRender() !== -1 &&\r\n      this.state.selectedItemIndex <\r\n        this.state.menuItems[this.state.selectedMenuIndex].categoryItems[\r\n          this.state.selectedCategoryIndex\r\n        ].items.length\r\n    ) {\r\n      return this.state.selectedItemIndex;\r\n    } else {\r\n      return -1;\r\n    }\r\n  };\r\n\r\n  // Column list selectors\r\n  setSelectedMenuIndex = (index?: number): any => {\r\n    if (index !== undefined) {\r\n      this.setState(() => {\r\n        console.log(\"Updating index to \", index);\r\n        return {\r\n          selectedMenuIndex: index,\r\n          selectedCategoryIndex: 0,\r\n          selectedItemIndex: 0,\r\n        };\r\n      });\r\n    } else {\r\n      return this.state.selectedMenuIndex;\r\n    }\r\n  };\r\n  setSelectedCategoryIndex = (index?: number): any => {\r\n    if (index !== undefined) {\r\n      this.setState(() => {\r\n        console.log(\"From local setSelectedCategoryIndex\");\r\n        return {\r\n          selectedCategoryIndex: index,\r\n          selectedItemIndex: 0,\r\n        };\r\n      });\r\n    } else {\r\n      return this.state.selectedCategoryIndex;\r\n    }\r\n  };\r\n  setSelectedItemIndex = (index: number): any => {\r\n    if (index !== undefined) {\r\n      this.setState(() => {\r\n        console.log(\"From local setSelectedItemIndex\");\r\n        return {\r\n          selectedItemIndex: index,\r\n        };\r\n      });\r\n    } else {\r\n      return this.state.selectedItemIndex;\r\n    }\r\n  };\r\n\r\n  // Generic textfield updater\r\n  updateText = (e: any) => {\r\n    console.log(\"Text in textfield: \", e.target.value);\r\n    this.setState(() => {\r\n      return {\r\n        addingItemName: e.target.value,\r\n      };\r\n    });\r\n  };\r\n  validateText = (): string => {\r\n    const emptyTextfieldErrorMsg: string = \"Name field cannot be empty.\";\r\n    return this.state.addingItemName === \"\" ? emptyTextfieldErrorMsg : \"\";\r\n  };\r\n\r\n  // Menu-specific helper methods and button event handlers\r\n  handleMenuAddClick = () => {\r\n    this.setState(() => {\r\n      const items = this.state.menuItems.concat({\r\n        id: this.state.menuItems.length,\r\n        name: this.state.addingItemName,\r\n        handleDeleteClick: this.handleMenuDeleteClick,\r\n        categoryItems: [],\r\n      });\r\n\r\n      return {\r\n        menuItems: items,\r\n      };\r\n    });\r\n  };\r\n  handleMenuAddRetrieveText = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(this.state.addingItemName);\r\n    this.handleMenuAddClick();\r\n    this.setState(() => {\r\n      return {\r\n        addingItemName: \"\",\r\n      };\r\n    });\r\n  };\r\n  handleMenuDeleteClick = (id: number) => {\r\n    const array = this.state.menuItems;\r\n\r\n    let newArray = array.filter(function logic(element) {\r\n      return element.id !== id;\r\n    });\r\n    for (let i = 0; i < newArray.length; i++) {\r\n      newArray[i].id = i;\r\n    }\r\n\r\n    this.setState(() => {\r\n      return {\r\n        selectedItemIndex: -1,\r\n        selectedCategoryIndex: -1,\r\n        selectedMenuIndex: -1,\r\n        menuItems: newArray,\r\n      };\r\n    });\r\n    console.log(\r\n      this.state.selectedItemIndex,\r\n      \" \",\r\n      this.state.selectedCategoryIndex,\r\n      \" \",\r\n      this.state.selectedMenuIndex\r\n    );\r\n  };\r\n  handleMenuEditClick = () => {\r\n    this.setState(() => {\r\n      const items = this.state.menuItems;\r\n\r\n      items[this.state.selectedMenuIndex].name = this.state.addingItemName;\r\n\r\n      return {\r\n        menuItems: items,\r\n      };\r\n    });\r\n  };\r\n  handleMenuEditRetrieveText = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(this.state.addingItemName);\r\n    this.handleMenuEditClick();\r\n    this.setState(() => {\r\n      return {\r\n        addingItemName: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  // Category-specific helper methods and button event handlers\r\n  handleCategoryAddClick = () => {\r\n    this.setState(() => {\r\n      const items = this.state.menuItems[\r\n        this.state.selectedMenuIndex\r\n      ].categoryItems.concat({\r\n        id: this.state.menuItems[this.state.selectedMenuIndex].categoryItems\r\n          .length,\r\n        name: this.state.addingItemName,\r\n        handleDeleteClick: this.handleCategoryDeleteClick,\r\n        items: [],\r\n      });\r\n\r\n      const updatingMenuItems = this.state.menuItems;\r\n      updatingMenuItems[this.state.selectedMenuIndex].categoryItems = items;\r\n\r\n      return {\r\n        menuItems: updatingMenuItems,\r\n      };\r\n    });\r\n  };\r\n  handleCategoryAddRetrieveText = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(this.state.addingItemName);\r\n    this.handleCategoryAddClick();\r\n    this.setState(() => {\r\n      return {\r\n        addingItemName: \"\",\r\n      };\r\n    });\r\n  };\r\n  handleCategoryDeleteClick = (id: number) => {\r\n    const array =\r\n      this.state.menuItems[this.state.selectedMenuIndex].categoryItems;\r\n\r\n    let newArray = array.filter(function logic(element) {\r\n      console.log(element.id, \"---\", id);\r\n      return element.id !== id;\r\n    });\r\n    for (let i = 0; i < newArray.length; i++) {\r\n      newArray[i].id = i;\r\n    }\r\n\r\n    const updatingMenuItems = this.state.menuItems;\r\n    updatingMenuItems[this.state.selectedMenuIndex].categoryItems = newArray;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        menuItems: updatingMenuItems,\r\n      };\r\n    });\r\n  };\r\n  handleCategoryEditClick = () => {\r\n    this.setState(() => {\r\n      const items = this.state.menuItems;\r\n\r\n      items[this.state.selectedMenuIndex].categoryItems[\r\n        this.state.selectedCategoryIndex\r\n      ].name = this.state.addingItemName;\r\n\r\n      return {\r\n        menuItems: items,\r\n      };\r\n    });\r\n  };\r\n  handleCategoryEditRetrieveText = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(this.state.addingItemName);\r\n    this.handleCategoryEditClick();\r\n    this.setState(() => {\r\n      return {\r\n        addingItemName: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  // Item-specific helper methods and button event handlers\r\n  handleItemAddClick = () => {\r\n    this.setState(() => {\r\n      const items = this.state.menuItems[\r\n        this.state.selectedMenuIndex\r\n      ].categoryItems[this.state.selectedCategoryIndex].items.concat({\r\n        id: this.state.menuItems[this.state.selectedMenuIndex].categoryItems[\r\n          this.state.selectedCategoryIndex\r\n        ].items.length,\r\n        name: this.state.addingItemName,\r\n        handleDeleteClick: this.handleItemDeleteClick,\r\n        description: \"\",\r\n        price: 0,\r\n        ingredients: \"\",\r\n      });\r\n\r\n      const updatingMenuItems = this.state.menuItems;\r\n      updatingMenuItems[this.state.selectedMenuIndex].categoryItems[\r\n        this.state.selectedCategoryIndex\r\n      ].items = items;\r\n\r\n      return {\r\n        menuItems: updatingMenuItems,\r\n      };\r\n    });\r\n  };\r\n  handleItemAddRetrieveText = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(this.state.addingItemName);\r\n    this.handleItemAddClick();\r\n    this.setState(() => {\r\n      return {\r\n        addingItemName: \"\",\r\n      };\r\n    });\r\n  };\r\n  handleItemDeleteClick = (id: number) => {\r\n    const array =\r\n      this.state.menuItems[this.state.selectedMenuIndex].categoryItems[\r\n        this.state.selectedCategoryIndex\r\n      ].items;\r\n\r\n    let newArray = array.filter(function logic(element) {\r\n      console.log(element.id, \"---\", id);\r\n      return element.id !== id;\r\n    });\r\n    for (let i = 0; i < newArray.length; i++) {\r\n      newArray[i].id = i;\r\n    }\r\n\r\n    const updatingMenuItems = this.state.menuItems;\r\n    updatingMenuItems[this.state.selectedMenuIndex].categoryItems[\r\n      this.state.selectedCategoryIndex\r\n    ].items = newArray;\r\n\r\n    this.setState(() => {\r\n      return {\r\n        menuItems: updatingMenuItems,\r\n      };\r\n    });\r\n  };\r\n  handleItemEditClick = () => {\r\n    this.setState(() => {\r\n      const items = this.state.menuItems;\r\n\r\n      items[this.state.selectedMenuIndex].categoryItems[\r\n        this.state.selectedCategoryIndex\r\n      ].items[this.state.selectedItemIndex].name = this.state.addingItemName;\r\n\r\n      return {\r\n        menuItems: items,\r\n      };\r\n    });\r\n  };\r\n  handleItemEditRetrieveText = (e: any) => {\r\n    e.preventDefault();\r\n    console.log(this.state.addingItemName);\r\n    this.handleItemEditClick();\r\n    this.setState(() => {\r\n      return {\r\n        addingItemName: \"\",\r\n      };\r\n    });\r\n  };\r\n\r\n  // Item Page helper method to update fields real time\r\n  checkItemUpdate = (item: ItemProps) => {\r\n    this.setState(() => {\r\n      let newArray = this.state.menuItems;\r\n      newArray[this.state.selectedMenuIndex].categoryItems[\r\n        this.state.selectedCategoryIndex\r\n      ].items[this.state.selectedItemIndex] = item;\r\n      return { menuItems: newArray };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(\r\n      this.state.selectedMenuIndex,\r\n      \" \",\r\n      this.state.selectedCategoryIndex,\r\n      \" \",\r\n      this.state.selectedItemIndex\r\n    );\r\n    return (\r\n      <>\r\n        <Grid container spacing={0} bgcolor={\"#ffebee\"}>\r\n          <Grid item xs={3}>\r\n            <List component=\"nav\">\r\n              <Grid item xs={12}>\r\n                <ColumnListItemButton\r\n                  deleteDialogTitle=\"Are you sure you want to delete the menu?\"\r\n                  deleteDialogLabel=\"All items in the menu will be deleted as well.\"\r\n                  editDialogTitle=\"Enter New Menu Name\"\r\n                  editDialogLabel=\"New Menu Name\"\r\n                  items={this.state.menuItems}\r\n                  handleDeleteClick={this.handleMenuDeleteClick}\r\n                  handleEditRetrieveText={this.handleMenuEditRetrieveText}\r\n                  updateText={this.updateText}\r\n                  validateText={this.validateText}\r\n                  setSelectedColumnIndex={this.setSelectedMenuIndex}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <ListItem disablePadding alignItems=\"center\">\r\n                  <AddButtonWithDialog\r\n                    title=\"Enter Menu Name\"\r\n                    label=\"Menu Name\"\r\n                    handleAddRetrieveText={this.handleMenuAddRetrieveText}\r\n                    updateText={this.updateText}\r\n                    validateText={this.validateText}\r\n                  />\r\n                </ListItem>\r\n              </Grid>\r\n            </List>\r\n          </Grid>\r\n          <Divider\r\n            orientation=\"vertical\"\r\n            variant=\"middle\"\r\n            flexItem\r\n            sx={{ height: \"100vh\" }}\r\n          />\r\n          {this.validateMenuIndexBeforeRender() !== -1 && (\r\n            <>\r\n              <Grid item xs={3}>\r\n                <CategoryColumnList\r\n                  categoryItems={\r\n                    this.state.menuItems[this.state.selectedMenuIndex]\r\n                      .categoryItems\r\n                  }\r\n                  handleCategoryAddRetrieveText={\r\n                    this.handleCategoryAddRetrieveText\r\n                  }\r\n                  handleCategoryDeleteClick={this.handleCategoryDeleteClick}\r\n                  handleCategoryEditRetrieveText={\r\n                    this.handleCategoryEditRetrieveText\r\n                  }\r\n                  updateText={this.updateText}\r\n                  validateText={this.validateText}\r\n                  setSelectedCategoryIndex={this.setSelectedCategoryIndex}\r\n                />\r\n              </Grid>\r\n              <Divider\r\n                orientation=\"vertical\"\r\n                variant=\"middle\"\r\n                flexItem\r\n                sx={{ height: \"100vh\" }}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {this.validateCategoryIndexBeforeRender() !== -1 && (\r\n            <>\r\n              <Grid item xs={3}>\r\n                <ItemColumnList\r\n                  itemItems={\r\n                    this.state.menuItems[this.state.selectedMenuIndex]\r\n                      .categoryItems[this.state.selectedCategoryIndex].items\r\n                  }\r\n                  handleItemAddRetrieveText={this.handleItemAddRetrieveText}\r\n                  handleItemDeleteClick={this.handleItemDeleteClick}\r\n                  handleItemEditRetrieveText={this.handleItemEditRetrieveText}\r\n                  updateText={this.updateText}\r\n                  validateText={this.validateText}\r\n                  setSelectedItemIndex={this.setSelectedItemIndex}\r\n                />\r\n              </Grid>\r\n              <Divider\r\n                orientation=\"vertical\"\r\n                variant=\"middle\"\r\n                flexItem\r\n                sx={{ height: \"100vh\" }}\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {this.validateItemIndexBeforeRender() !== -1 && (\r\n            <Grid padding={5} item xs={2.9}>\r\n              <ItemColumnPage\r\n                item={\r\n                  this.state.menuItems[this.state.selectedMenuIndex]\r\n                    .categoryItems[this.state.selectedCategoryIndex].items[\r\n                    this.state.selectedItemIndex\r\n                  ]\r\n                }\r\n                checkItemUpdate={this.checkItemUpdate}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAEEC,OAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,QALF,QAQO,gBARP;AAcA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,oBAAP,MAAiC,iCAAjC;AACA,SAASC,kBAAT,QAAmC,sBAAnC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,OAAO,MAAMC,cAAN,SAA6BV,KAAK,CAACW,SAAnC,CAGL;EACAC,WAAW,CAACC,KAAD,EAA6B;IACtC,MAAMA,KAAN;;IADsC,KAwBxCC,6BAxBwC,GAwBR,MAAc;MAC5C,IAAI,KAAKC,KAAL,CAAWC,iBAAX,GAA+B,KAAKD,KAAL,CAAWE,SAAX,CAAqBC,MAAxD,EAAgE;QAC9D,OAAO,KAAKH,KAAL,CAAWC,iBAAlB;MACD,CAFD,MAEO;QACL,OAAO,CAAC,CAAR;MACD;IACF,CA9BuC;;IAAA,KA+BxCG,iCA/BwC,GA+BJ,MAAc;MAChD,IACE,KAAKL,6BAAL,OAAyC,CAAC,CAA1C,IACA,KAAKC,KAAL,CAAWK,qBAAX,GACE,KAAKL,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,iBAAhC,EAAmDK,aAAnD,CAAiEH,MAHrE,EAIE;QACA,OAAO,KAAKH,KAAL,CAAWK,qBAAlB;MACD,CAND,MAMO;QACL,OAAO,CAAC,CAAR;MACD;IACF,CAzCuC;;IAAA,KA0CxCE,6BA1CwC,GA0CR,MAAc;MAC5C,IACE,KAAKR,6BAAL,OAAyC,CAAC,CAA1C,IACA,KAAKK,iCAAL,OAA6C,CAAC,CAD9C,IAEA,KAAKJ,KAAL,CAAWQ,iBAAX,GACE,KAAKR,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,iBAAhC,EAAmDK,aAAnD,CACE,KAAKN,KAAL,CAAWK,qBADb,EAEEI,KAFF,CAEQN,MANZ,EAOE;QACA,OAAO,KAAKH,KAAL,CAAWQ,iBAAlB;MACD,CATD,MASO;QACL,OAAO,CAAC,CAAR;MACD;IACF,CAvDuC;;IAAA,KA0DxCE,oBA1DwC,GA0DhBC,KAAD,IAAyB;MAC9C,IAAIA,KAAK,KAAKC,SAAd,EAAyB;QACvB,KAAKC,QAAL,CAAc,MAAM;UAClBC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCJ,KAAlC;UACA,OAAO;YACLV,iBAAiB,EAAEU,KADd;YAELN,qBAAqB,EAAE,CAFlB;YAGLG,iBAAiB,EAAE;UAHd,CAAP;QAKD,CAPD;MAQD,CATD,MASO;QACL,OAAO,KAAKR,KAAL,CAAWC,iBAAlB;MACD;IACF,CAvEuC;;IAAA,KAwExCe,wBAxEwC,GAwEZL,KAAD,IAAyB;MAClD,IAAIA,KAAK,KAAKC,SAAd,EAAyB;QACvB,KAAKC,QAAL,CAAc,MAAM;UAClBC,OAAO,CAACC,GAAR,CAAY,qCAAZ;UACA,OAAO;YACLV,qBAAqB,EAAEM,KADlB;YAELH,iBAAiB,EAAE;UAFd,CAAP;QAID,CAND;MAOD,CARD,MAQO;QACL,OAAO,KAAKR,KAAL,CAAWK,qBAAlB;MACD;IACF,CApFuC;;IAAA,KAqFxCY,oBArFwC,GAqFhBN,KAAD,IAAwB;MAC7C,IAAIA,KAAK,KAAKC,SAAd,EAAyB;QACvB,KAAKC,QAAL,CAAc,MAAM;UAClBC,OAAO,CAACC,GAAR,CAAY,iCAAZ;UACA,OAAO;YACLP,iBAAiB,EAAEG;UADd,CAAP;QAGD,CALD;MAMD,CAPD,MAOO;QACL,OAAO,KAAKX,KAAL,CAAWQ,iBAAlB;MACD;IACF,CAhGuC;;IAAA,KAmGxCU,UAnGwC,GAmG1BC,CAAD,IAAY;MACvBL,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCI,CAAC,CAACC,MAAF,CAASC,KAA5C;MACA,KAAKR,QAAL,CAAc,MAAM;QAClB,OAAO;UACLS,cAAc,EAAEH,CAAC,CAACC,MAAF,CAASC;QADpB,CAAP;MAGD,CAJD;IAKD,CA1GuC;;IAAA,KA2GxCE,YA3GwC,GA2GzB,MAAc;MAC3B,MAAMC,sBAA8B,GAAG,6BAAvC;MACA,OAAO,KAAKxB,KAAL,CAAWsB,cAAX,KAA8B,EAA9B,GAAmCE,sBAAnC,GAA4D,EAAnE;IACD,CA9GuC;;IAAA,KAiHxCC,kBAjHwC,GAiHnB,MAAM;MACzB,KAAKZ,QAAL,CAAc,MAAM;QAClB,MAAMJ,KAAK,GAAG,KAAKT,KAAL,CAAWE,SAAX,CAAqBwB,MAArB,CAA4B;UACxCC,EAAE,EAAE,KAAK3B,KAAL,CAAWE,SAAX,CAAqBC,MADe;UAExCyB,IAAI,EAAE,KAAK5B,KAAL,CAAWsB,cAFuB;UAGxCO,iBAAiB,EAAE,KAAKC,qBAHgB;UAIxCxB,aAAa,EAAE;QAJyB,CAA5B,CAAd;QAOA,OAAO;UACLJ,SAAS,EAAEO;QADN,CAAP;MAGD,CAXD;IAYD,CA9HuC;;IAAA,KA+HxCsB,yBA/HwC,GA+HXZ,CAAD,IAAY;MACtCA,CAAC,CAACa,cAAF;MACAlB,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWsB,cAAvB;MACA,KAAKG,kBAAL;MACA,KAAKZ,QAAL,CAAc,MAAM;QAClB,OAAO;UACLS,cAAc,EAAE;QADX,CAAP;MAGD,CAJD;IAKD,CAxIuC;;IAAA,KAyIxCQ,qBAzIwC,GAyIfH,EAAD,IAAgB;MACtC,MAAMM,KAAK,GAAG,KAAKjC,KAAL,CAAWE,SAAzB;MAEA,IAAIgC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa,SAASC,KAAT,CAAeC,OAAf,EAAwB;QAClD,OAAOA,OAAO,CAACV,EAAR,KAAeA,EAAtB;MACD,CAFc,CAAf;;MAGA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAAC/B,MAA7B,EAAqCmC,CAAC,EAAtC,EAA0C;QACxCJ,QAAQ,CAACI,CAAD,CAAR,CAAYX,EAAZ,GAAiBW,CAAjB;MACD;;MAED,KAAKzB,QAAL,CAAc,MAAM;QAClB,OAAO;UACLL,iBAAiB,EAAE,CAAC,CADf;UAELH,qBAAqB,EAAE,CAAC,CAFnB;UAGLJ,iBAAiB,EAAE,CAAC,CAHf;UAILC,SAAS,EAAEgC;QAJN,CAAP;MAMD,CAPD;MAQApB,OAAO,CAACC,GAAR,CACE,KAAKf,KAAL,CAAWQ,iBADb,EAEE,GAFF,EAGE,KAAKR,KAAL,CAAWK,qBAHb,EAIE,GAJF,EAKE,KAAKL,KAAL,CAAWC,iBALb;IAOD,CAlKuC;;IAAA,KAmKxCsC,mBAnKwC,GAmKlB,MAAM;MAC1B,KAAK1B,QAAL,CAAc,MAAM;QAClB,MAAMJ,KAAK,GAAG,KAAKT,KAAL,CAAWE,SAAzB;QAEAO,KAAK,CAAC,KAAKT,KAAL,CAAWC,iBAAZ,CAAL,CAAoC2B,IAApC,GAA2C,KAAK5B,KAAL,CAAWsB,cAAtD;QAEA,OAAO;UACLpB,SAAS,EAAEO;QADN,CAAP;MAGD,CARD;IASD,CA7KuC;;IAAA,KA8KxC+B,0BA9KwC,GA8KVrB,CAAD,IAAY;MACvCA,CAAC,CAACa,cAAF;MACAlB,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWsB,cAAvB;MACA,KAAKiB,mBAAL;MACA,KAAK1B,QAAL,CAAc,MAAM;QAClB,OAAO;UACLS,cAAc,EAAE;QADX,CAAP;MAGD,CAJD;IAKD,CAvLuC;;IAAA,KA0LxCmB,sBA1LwC,GA0Lf,MAAM;MAC7B,KAAK5B,QAAL,CAAc,MAAM;QAClB,MAAMJ,KAAK,GAAG,KAAKT,KAAL,CAAWE,SAAX,CACZ,KAAKF,KAAL,CAAWC,iBADC,EAEZK,aAFY,CAEEoB,MAFF,CAES;UACrBC,EAAE,EAAE,KAAK3B,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,iBAAhC,EAAmDK,aAAnD,CACDH,MAFkB;UAGrByB,IAAI,EAAE,KAAK5B,KAAL,CAAWsB,cAHI;UAIrBO,iBAAiB,EAAE,KAAKa,yBAJH;UAKrBjC,KAAK,EAAE;QALc,CAFT,CAAd;QAUA,MAAMkC,iBAAiB,GAAG,KAAK3C,KAAL,CAAWE,SAArC;QACAyC,iBAAiB,CAAC,KAAK3C,KAAL,CAAWC,iBAAZ,CAAjB,CAAgDK,aAAhD,GAAgEG,KAAhE;QAEA,OAAO;UACLP,SAAS,EAAEyC;QADN,CAAP;MAGD,CAjBD;IAkBD,CA7MuC;;IAAA,KA8MxCC,6BA9MwC,GA8MPzB,CAAD,IAAY;MAC1CA,CAAC,CAACa,cAAF;MACAlB,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWsB,cAAvB;MACA,KAAKmB,sBAAL;MACA,KAAK5B,QAAL,CAAc,MAAM;QAClB,OAAO;UACLS,cAAc,EAAE;QADX,CAAP;MAGD,CAJD;IAKD,CAvNuC;;IAAA,KAwNxCoB,yBAxNwC,GAwNXf,EAAD,IAAgB;MAC1C,MAAMM,KAAK,GACT,KAAKjC,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,iBAAhC,EAAmDK,aADrD;MAGA,IAAI4B,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa,SAASC,KAAT,CAAeC,OAAf,EAAwB;QAClDvB,OAAO,CAACC,GAAR,CAAYsB,OAAO,CAACV,EAApB,EAAwB,KAAxB,EAA+BA,EAA/B;QACA,OAAOU,OAAO,CAACV,EAAR,KAAeA,EAAtB;MACD,CAHc,CAAf;;MAIA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAAC/B,MAA7B,EAAqCmC,CAAC,EAAtC,EAA0C;QACxCJ,QAAQ,CAACI,CAAD,CAAR,CAAYX,EAAZ,GAAiBW,CAAjB;MACD;;MAED,MAAMK,iBAAiB,GAAG,KAAK3C,KAAL,CAAWE,SAArC;MACAyC,iBAAiB,CAAC,KAAK3C,KAAL,CAAWC,iBAAZ,CAAjB,CAAgDK,aAAhD,GAAgE4B,QAAhE;MAEA,KAAKrB,QAAL,CAAc,MAAM;QAClB,OAAO;UACLX,SAAS,EAAEyC;QADN,CAAP;MAGD,CAJD;IAKD,CA5OuC;;IAAA,KA6OxCE,uBA7OwC,GA6Od,MAAM;MAC9B,KAAKhC,QAAL,CAAc,MAAM;QAClB,MAAMJ,KAAK,GAAG,KAAKT,KAAL,CAAWE,SAAzB;QAEAO,KAAK,CAAC,KAAKT,KAAL,CAAWC,iBAAZ,CAAL,CAAoCK,aAApC,CACE,KAAKN,KAAL,CAAWK,qBADb,EAEEuB,IAFF,GAES,KAAK5B,KAAL,CAAWsB,cAFpB;QAIA,OAAO;UACLpB,SAAS,EAAEO;QADN,CAAP;MAGD,CAVD;IAWD,CAzPuC;;IAAA,KA0PxCqC,8BA1PwC,GA0PN3B,CAAD,IAAY;MAC3CA,CAAC,CAACa,cAAF;MACAlB,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWsB,cAAvB;MACA,KAAKuB,uBAAL;MACA,KAAKhC,QAAL,CAAc,MAAM;QAClB,OAAO;UACLS,cAAc,EAAE;QADX,CAAP;MAGD,CAJD;IAKD,CAnQuC;;IAAA,KAsQxCyB,kBAtQwC,GAsQnB,MAAM;MACzB,KAAKlC,QAAL,CAAc,MAAM;QAClB,MAAMJ,KAAK,GAAG,KAAKT,KAAL,CAAWE,SAAX,CACZ,KAAKF,KAAL,CAAWC,iBADC,EAEZK,aAFY,CAEE,KAAKN,KAAL,CAAWK,qBAFb,EAEoCI,KAFpC,CAE0CiB,MAF1C,CAEiD;UAC7DC,EAAE,EAAE,KAAK3B,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,iBAAhC,EAAmDK,aAAnD,CACF,KAAKN,KAAL,CAAWK,qBADT,EAEFI,KAFE,CAEIN,MAHqD;UAI7DyB,IAAI,EAAE,KAAK5B,KAAL,CAAWsB,cAJ4C;UAK7DO,iBAAiB,EAAE,KAAKmB,qBALqC;UAM7DC,WAAW,EAAE,EANgD;UAO7DC,KAAK,EAAE,CAPsD;UAQ7DC,WAAW,EAAE;QARgD,CAFjD,CAAd;QAaA,MAAMR,iBAAiB,GAAG,KAAK3C,KAAL,CAAWE,SAArC;QACAyC,iBAAiB,CAAC,KAAK3C,KAAL,CAAWC,iBAAZ,CAAjB,CAAgDK,aAAhD,CACE,KAAKN,KAAL,CAAWK,qBADb,EAEEI,KAFF,GAEUA,KAFV;QAIA,OAAO;UACLP,SAAS,EAAEyC;QADN,CAAP;MAGD,CAtBD;IAuBD,CA9RuC;;IAAA,KA+RxCS,yBA/RwC,GA+RXjC,CAAD,IAAY;MACtCA,CAAC,CAACa,cAAF;MACAlB,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWsB,cAAvB;MACA,KAAKyB,kBAAL;MACA,KAAKlC,QAAL,CAAc,MAAM;QAClB,OAAO;UACLS,cAAc,EAAE;QADX,CAAP;MAGD,CAJD;IAKD,CAxSuC;;IAAA,KAySxC0B,qBAzSwC,GAySfrB,EAAD,IAAgB;MACtC,MAAMM,KAAK,GACT,KAAKjC,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,iBAAhC,EAAmDK,aAAnD,CACE,KAAKN,KAAL,CAAWK,qBADb,EAEEI,KAHJ;MAKA,IAAIyB,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa,SAASC,KAAT,CAAeC,OAAf,EAAwB;QAClDvB,OAAO,CAACC,GAAR,CAAYsB,OAAO,CAACV,EAApB,EAAwB,KAAxB,EAA+BA,EAA/B;QACA,OAAOU,OAAO,CAACV,EAAR,KAAeA,EAAtB;MACD,CAHc,CAAf;;MAIA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,QAAQ,CAAC/B,MAA7B,EAAqCmC,CAAC,EAAtC,EAA0C;QACxCJ,QAAQ,CAACI,CAAD,CAAR,CAAYX,EAAZ,GAAiBW,CAAjB;MACD;;MAED,MAAMK,iBAAiB,GAAG,KAAK3C,KAAL,CAAWE,SAArC;MACAyC,iBAAiB,CAAC,KAAK3C,KAAL,CAAWC,iBAAZ,CAAjB,CAAgDK,aAAhD,CACE,KAAKN,KAAL,CAAWK,qBADb,EAEEI,KAFF,GAEUyB,QAFV;MAIA,KAAKrB,QAAL,CAAc,MAAM;QAClB,OAAO;UACLX,SAAS,EAAEyC;QADN,CAAP;MAGD,CAJD;IAKD,CAjUuC;;IAAA,KAkUxCU,mBAlUwC,GAkUlB,MAAM;MAC1B,KAAKxC,QAAL,CAAc,MAAM;QAClB,MAAMJ,KAAK,GAAG,KAAKT,KAAL,CAAWE,SAAzB;QAEAO,KAAK,CAAC,KAAKT,KAAL,CAAWC,iBAAZ,CAAL,CAAoCK,aAApC,CACE,KAAKN,KAAL,CAAWK,qBADb,EAEEI,KAFF,CAEQ,KAAKT,KAAL,CAAWQ,iBAFnB,EAEsCoB,IAFtC,GAE6C,KAAK5B,KAAL,CAAWsB,cAFxD;QAIA,OAAO;UACLpB,SAAS,EAAEO;QADN,CAAP;MAGD,CAVD;IAWD,CA9UuC;;IAAA,KA+UxC6C,0BA/UwC,GA+UVnC,CAAD,IAAY;MACvCA,CAAC,CAACa,cAAF;MACAlB,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWsB,cAAvB;MACA,KAAK+B,mBAAL;MACA,KAAKxC,QAAL,CAAc,MAAM;QAClB,OAAO;UACLS,cAAc,EAAE;QADX,CAAP;MAGD,CAJD;IAKD,CAxVuC;;IAAA,KA2VxCiC,eA3VwC,GA2VrBC,IAAD,IAAqB;MACrC,KAAK3C,QAAL,CAAc,MAAM;QAClB,IAAIqB,QAAQ,GAAG,KAAKlC,KAAL,CAAWE,SAA1B;QACAgC,QAAQ,CAAC,KAAKlC,KAAL,CAAWC,iBAAZ,CAAR,CAAuCK,aAAvC,CACE,KAAKN,KAAL,CAAWK,qBADb,EAEEI,KAFF,CAEQ,KAAKT,KAAL,CAAWQ,iBAFnB,IAEwCgD,IAFxC;QAGA,OAAO;UAAEtD,SAAS,EAAEgC;QAAb,CAAP;MACD,CAND;IAOD,CAnWuC;;IAGtC,KAAKlC,KAAL,GAAa;MACXsB,cAAc,EAAE,EADL;MAEXpB,SAAS,EAAE,EAFA;MAGXD,iBAAiB,EAAE,CAHR;MAIXI,qBAAqB,EAAE,CAJZ;MAKXG,iBAAiB,EAAE;IALR,CAAb;IAQAM,OAAO,CAACC,GAAR,CAAY,oBAAZ;EACD,CAbD,CAeA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;;;EA8UA0C,MAAM,GAAG;IACP3C,OAAO,CAACC,GAAR,CACE,KAAKf,KAAL,CAAWC,iBADb,EAEE,GAFF,EAGE,KAAKD,KAAL,CAAWK,qBAHb,EAIE,GAJF,EAKE,KAAKL,KAAL,CAAWQ,iBALb;IAOA,oBACE;MAAA,uBACE,QAAC,IAAD;QAAM,SAAS,MAAf;QAAgB,OAAO,EAAE,CAAzB;QAA4B,OAAO,EAAE,SAArC;QAAA,wBACE,QAAC,IAAD;UAAM,IAAI,MAAV;UAAW,EAAE,EAAE,CAAf;UAAA,uBACE,QAAC,IAAD;YAAM,SAAS,EAAC,KAAhB;YAAA,wBACE,QAAC,IAAD;cAAM,IAAI,MAAV;cAAW,EAAE,EAAE,EAAf;cAAA,uBACE,QAAC,oBAAD;gBACE,iBAAiB,EAAC,2CADpB;gBAEE,iBAAiB,EAAC,gDAFpB;gBAGE,eAAe,EAAC,qBAHlB;gBAIE,eAAe,EAAC,eAJlB;gBAKE,KAAK,EAAE,KAAKR,KAAL,CAAWE,SALpB;gBAME,iBAAiB,EAAE,KAAK4B,qBAN1B;gBAOE,sBAAsB,EAAE,KAAKU,0BAP/B;gBAQE,UAAU,EAAE,KAAKtB,UARnB;gBASE,YAAY,EAAE,KAAKK,YATrB;gBAUE,sBAAsB,EAAE,KAAKb;cAV/B;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QADF,eAeE,QAAC,IAAD;cAAM,IAAI,MAAV;cAAW,EAAE,EAAE,EAAf;cAAA,uBACE,QAAC,QAAD;gBAAU,cAAc,MAAxB;gBAAyB,UAAU,EAAC,QAApC;gBAAA,uBACE,QAAC,mBAAD;kBACE,KAAK,EAAC,iBADR;kBAEE,KAAK,EAAC,WAFR;kBAGE,qBAAqB,EAAE,KAAKqB,yBAH9B;kBAIE,UAAU,EAAE,KAAKb,UAJnB;kBAKE,YAAY,EAAE,KAAKK;gBALrB;kBAAA;kBAAA;kBAAA;gBAAA;cADF;gBAAA;gBAAA;gBAAA;cAAA;YADF;cAAA;cAAA;cAAA;YAAA,QAfF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eA8BE,QAAC,OAAD;UACE,WAAW,EAAC,UADd;UAEE,OAAO,EAAC,QAFV;UAGE,QAAQ,MAHV;UAIE,EAAE,EAAE;YAAEmC,MAAM,EAAE;UAAV;QAJN;UAAA;UAAA;UAAA;QAAA,QA9BF,EAoCG,KAAK3D,6BAAL,OAAyC,CAAC,CAA1C,iBACC;UAAA,wBACE,QAAC,IAAD;YAAM,IAAI,MAAV;YAAW,EAAE,EAAE,CAAf;YAAA,uBACE,QAAC,kBAAD;cACE,aAAa,EACX,KAAKC,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,iBAAhC,EACGK,aAHP;cAKE,6BAA6B,EAC3B,KAAKsC,6BANT;cAQE,yBAAyB,EAAE,KAAKF,yBARlC;cASE,8BAA8B,EAC5B,KAAKI,8BAVT;cAYE,UAAU,EAAE,KAAK5B,UAZnB;cAaE,YAAY,EAAE,KAAKK,YAbrB;cAcE,wBAAwB,EAAE,KAAKP;YAdjC;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAmBE,QAAC,OAAD;YACE,WAAW,EAAC,UADd;YAEE,OAAO,EAAC,QAFV;YAGE,QAAQ,MAHV;YAIE,EAAE,EAAE;cAAE0C,MAAM,EAAE;YAAV;UAJN;YAAA;YAAA;YAAA;UAAA,QAnBF;QAAA,gBArCJ,EAiEG,KAAKtD,iCAAL,OAA6C,CAAC,CAA9C,iBACC;UAAA,wBACE,QAAC,IAAD;YAAM,IAAI,MAAV;YAAW,EAAE,EAAE,CAAf;YAAA,uBACE,QAAC,cAAD;cACE,SAAS,EACP,KAAKJ,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,iBAAhC,EACGK,aADH,CACiB,KAAKN,KAAL,CAAWK,qBAD5B,EACmDI,KAHvD;cAKE,yBAAyB,EAAE,KAAK2C,yBALlC;cAME,qBAAqB,EAAE,KAAKJ,qBAN9B;cAOE,0BAA0B,EAAE,KAAKM,0BAPnC;cAQE,UAAU,EAAE,KAAKpC,UARnB;cASE,YAAY,EAAE,KAAKK,YATrB;cAUE,oBAAoB,EAAE,KAAKN;YAV7B;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAeE,QAAC,OAAD;YACE,WAAW,EAAC,UADd;YAEE,OAAO,EAAC,QAFV;YAGE,QAAQ,MAHV;YAIE,EAAE,EAAE;cAAEyC,MAAM,EAAE;YAAV;UAJN;YAAA;YAAA;YAAA;UAAA,QAfF;QAAA,gBAlEJ,EA0FG,KAAKnD,6BAAL,OAAyC,CAAC,CAA1C,iBACC,QAAC,IAAD;UAAM,OAAO,EAAE,CAAf;UAAkB,IAAI,MAAtB;UAAuB,EAAE,EAAE,GAA3B;UAAA,uBACE,QAAC,cAAD;YACE,IAAI,EACF,KAAKP,KAAL,CAAWE,SAAX,CAAqB,KAAKF,KAAL,CAAWC,iBAAhC,EACGK,aADH,CACiB,KAAKN,KAAL,CAAWK,qBAD5B,EACmDI,KADnD,CAEE,KAAKT,KAAL,CAAWQ,iBAFb,CAFJ;YAOE,eAAe,EAAE,KAAK+C;UAPxB;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QA3FJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADF,iBADF;EA4GD;;AA1dD"},"metadata":{},"sourceType":"module"}