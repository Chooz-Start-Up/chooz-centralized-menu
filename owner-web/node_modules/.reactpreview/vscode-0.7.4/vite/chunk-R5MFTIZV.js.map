{
  "version": 3,
  "sources": ["../../../@mui/material/Container/Container.js", "../../../@mui/material/Container/containerClasses.js", "../../../@mui/material/Container/index.js"],
  "sourcesContent": ["/* eslint-disable material-ui/mui-name-matches-component-name */\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;", "import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getContainerUtilityClass(slot) {\n  return generateUtilityClass('MuiContainer', slot);\n}\nconst containerClasses = generateUtilityClasses('MuiContainer', ['root', 'disableGutters', 'fixed', 'maxWidthXs', 'maxWidthSm', 'maxWidthMd', 'maxWidthLg', 'maxWidthXl']);\nexport default containerClasses;", "export { default } from './Container';\nexport { default as containerClasses } from './containerClasses';\nexport * from './containerClasses';"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA,wBAAsB;AACtB;AACA;AACA;AACA;AACA,IAAM,YAAY,gBAAgB;AAAA,EAChC,uBAAuB,eAAO,OAAO;AAAA,IACnC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,mBAAmB,CAAC,OAAO,WAAW;AACpC,YAAM;AAAA,QACJ;AAAA,UACE;AACJ,aAAO,CAAC,OAAO,MAAM,OAAO,WAAW,mBAAW,OAAO,WAAW,eAAe,WAAW,SAAS,OAAO,OAAO,WAAW,kBAAkB,OAAO;AAAA;AAAA;AAAA,EAG7J,eAAe,aAAW,cAAc;AAAA,IACtC,OAAO;AAAA,IACP,MAAM;AAAA;AAAA;AAGV,OAAwC,UAAU,YAEhD;AAAA,EASA,UAAU,0BAAU;AAAA,EAKpB,SAAS,0BAAU;AAAA,EAMnB,WAAW,0BAAU;AAAA,EAMrB,gBAAgB,0BAAU;AAAA,EAS1B,OAAO,0BAAU;AAAA,EAQjB,UAAU,0BAET,UAAU,CAAC,0BAAU,MAAM,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,SAAS,0BAAU;AAAA,EAK9E,IAAI,0BAAU,UAAU,CAAC,0BAAU,QAAQ,0BAAU,UAAU,CAAC,0BAAU,MAAM,0BAAU,QAAQ,0BAAU,SAAS,0BAAU,MAAM,0BAAU;AAAA,IAC7I;AACJ,IAAO,oBAAQ;;;AC5Ef;AAAA;AACO,kCAAkC,MAAM;AAC7C,SAAO,qBAAqB,gBAAgB;AAAA;AAE9C,IAAM,mBAAmB,uBAAuB,gBAAgB,CAAC,QAAQ,kBAAkB,SAAS,cAAc,cAAc,cAAc,cAAc;AAC5J,IAAO,2BAAQ;;;ACLf;",
  "names": []
}
