import {
  useTheme
} from "./chunk-Q3N2ZMLZ.js";
import {
  AccordionContext_default,
  deprecatedPropType,
  useForkRef
} from "./chunk-HRPLXHFR.js";
import {
  Transition_default
} from "./chunk-VL5KOIDK.js";
import {
  capitalize
} from "./chunk-HFXGEEE2.js";
import {
  _arrayWithHoles,
  _iterableToArray,
  _nonIterableRest,
  _objectWithoutProperties,
  _slicedToArray,
  _unsupportedIterableToArray,
  chainPropTypes,
  duration,
  withStyles_default
} from "./chunk-T5ALX2Y4.js";
import {
  _extends,
  clsx_m_default,
  init_clsx_m,
  init_extends,
  require_prop_types,
  require_react_is
} from "./chunk-YGQ7ZU54.js";
import {
  require_react
} from "./chunk-4SFVH5JR.js";
import {
  __toModule,
  init_define_process_env
} from "./chunk-DVH5O73P.js";

// node_modules/@material-ui/core/esm/utils/createChainedFunction.js
init_define_process_env();
function createChainedFunction() {
  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {
    funcs[_key] = arguments[_key];
  }
  return funcs.reduce(function(acc, func) {
    if (func == null) {
      return acc;
    }
    if (true) {
      if (typeof func !== "function") {
        console.error("Material-UI: Invalid Argument Type, must only provide functions, undefined, or null.");
      }
    }
    return function chainedFunction() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      acc.apply(this, args);
      func.apply(this, args);
    };
  }, function() {
  });
}

// node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js
init_define_process_env();
init_extends();
var React = __toModule(require_react());
var import_prop_types = __toModule(require_prop_types());
init_clsx_m();
var styles = function styles2(theme) {
  return {
    root: {
      userSelect: "none",
      width: "1em",
      height: "1em",
      display: "inline-block",
      fill: "currentColor",
      flexShrink: 0,
      fontSize: theme.typography.pxToRem(24),
      transition: theme.transitions.create("fill", {
        duration: theme.transitions.duration.shorter
      })
    },
    colorPrimary: {
      color: theme.palette.primary.main
    },
    colorSecondary: {
      color: theme.palette.secondary.main
    },
    colorAction: {
      color: theme.palette.action.active
    },
    colorError: {
      color: theme.palette.error.main
    },
    colorDisabled: {
      color: theme.palette.action.disabled
    },
    fontSizeInherit: {
      fontSize: "inherit"
    },
    fontSizeSmall: {
      fontSize: theme.typography.pxToRem(20)
    },
    fontSizeLarge: {
      fontSize: theme.typography.pxToRem(35)
    }
  };
};
var SvgIcon = React.forwardRef(function SvgIcon2(props, ref) {
  var children = props.children, classes = props.classes, className = props.className, _props$color = props.color, color = _props$color === void 0 ? "inherit" : _props$color, _props$component = props.component, Component = _props$component === void 0 ? "svg" : _props$component, _props$fontSize = props.fontSize, fontSize = _props$fontSize === void 0 ? "medium" : _props$fontSize, htmlColor = props.htmlColor, titleAccess = props.titleAccess, _props$viewBox = props.viewBox, viewBox = _props$viewBox === void 0 ? "0 0 24 24" : _props$viewBox, other = _objectWithoutProperties(props, ["children", "classes", "className", "color", "component", "fontSize", "htmlColor", "titleAccess", "viewBox"]);
  return React.createElement(Component, _extends({
    className: clsx_m_default(classes.root, className, color !== "inherit" && classes["color".concat(capitalize(color))], fontSize !== "default" && fontSize !== "medium" && classes["fontSize".concat(capitalize(fontSize))]),
    focusable: "false",
    viewBox,
    color: htmlColor,
    "aria-hidden": titleAccess ? void 0 : true,
    role: titleAccess ? "img" : void 0,
    ref
  }, other), children, titleAccess ? React.createElement("title", null, titleAccess) : null);
});
true ? SvgIcon.propTypes = {
  children: import_prop_types.default.node,
  classes: import_prop_types.default.object,
  className: import_prop_types.default.string,
  color: import_prop_types.default.oneOf(["action", "disabled", "error", "inherit", "primary", "secondary"]),
  component: import_prop_types.default.elementType,
  fontSize: chainPropTypes(import_prop_types.default.oneOf(["default", "inherit", "large", "medium", "small"]), function(props) {
    var fontSize = props.fontSize;
    if (fontSize === "default") {
      throw new Error('Material-UI: `fontSize="default"` is deprecated. Use `fontSize="medium"` instead.');
    }
    return null;
  }),
  htmlColor: import_prop_types.default.string,
  shapeRendering: import_prop_types.default.string,
  titleAccess: import_prop_types.default.string,
  viewBox: import_prop_types.default.string
} : void 0;
SvgIcon.muiName = "SvgIcon";
var SvgIcon_default = withStyles_default(styles, {
  name: "MuiSvgIcon"
})(SvgIcon);

// node_modules/@material-ui/core/esm/SvgIcon/index.js
init_define_process_env();

// node_modules/@material-ui/core/esm/utils/createSvgIcon.js
init_define_process_env();
init_extends();
var import_react = __toModule(require_react());
function createSvgIcon(path, displayName) {
  var Component = function Component2(props, ref) {
    return import_react.default.createElement(SvgIcon_default, _extends({
      ref
    }, props), path);
  };
  if (true) {
    Component.displayName = "".concat(displayName, "Icon");
  }
  Component.muiName = SvgIcon_default.muiName;
  return import_react.default.memo(import_react.default.forwardRef(Component));
}

// node_modules/@material-ui/core/esm/utils/debounce.js
init_define_process_env();
function debounce(func) {
  var wait = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 166;
  var timeout;
  function debounced() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var that = this;
    var later = function later2() {
      func.apply(that, args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  }
  debounced.clear = function() {
    clearTimeout(timeout);
  };
  return debounced;
}

// node_modules/@material-ui/core/esm/utils/isMuiElement.js
init_define_process_env();
var React3 = __toModule(require_react());
function isMuiElement(element, muiNames) {
  return React3.isValidElement(element) && muiNames.indexOf(element.type.muiName) !== -1;
}

// node_modules/@material-ui/core/esm/utils/ownerDocument.js
init_define_process_env();
function ownerDocument(node) {
  return node && node.ownerDocument || document;
}

// node_modules/@material-ui/core/esm/utils/ownerWindow.js
init_define_process_env();
function ownerWindow(node) {
  var doc = ownerDocument(node);
  return doc.defaultView || window;
}

// node_modules/@material-ui/core/esm/utils/requirePropFactory.js
init_define_process_env();
function requirePropFactory(componentNameInError) {
  if (false) {
    return function() {
      return null;
    };
  }
  var requireProp = function requireProp2(requiredProp) {
    return function(props, propName, componentName, location, propFullName) {
      var propFullNameSafe = propFullName || propName;
      if (typeof props[propName] !== "undefined" && !props[requiredProp]) {
        return new Error("The prop `".concat(propFullNameSafe, "` of ") + "`".concat(componentNameInError, "` must be used on `").concat(requiredProp, "`."));
      }
      return null;
    };
  };
  return requireProp;
}

// node_modules/@material-ui/core/esm/utils/unsupportedProp.js
init_define_process_env();
function unsupportedProp(props, propName, componentName, location, propFullName) {
  if (false) {
    return null;
  }
  var propFullNameSafe = propFullName || propName;
  if (typeof props[propName] !== "undefined") {
    return new Error("The prop `".concat(propFullNameSafe, "` is not supported. Please remove it."));
  }
  return null;
}

// node_modules/@material-ui/core/esm/utils/useControlled.js
init_define_process_env();
var React4 = __toModule(require_react());
function useControlled(_ref) {
  var controlled = _ref.controlled, defaultProp = _ref.default, name = _ref.name, _ref$state = _ref.state, state = _ref$state === void 0 ? "value" : _ref$state;
  var _React$useRef = React4.useRef(controlled !== void 0), isControlled = _React$useRef.current;
  var _React$useState = React4.useState(defaultProp), valueState = _React$useState[0], setValue = _React$useState[1];
  var value = isControlled ? controlled : valueState;
  if (true) {
    React4.useEffect(function() {
      if (isControlled !== (controlled !== void 0)) {
        console.error(["Material-UI: A component is changing the ".concat(isControlled ? "" : "un", "controlled ").concat(state, " state of ").concat(name, " to be ").concat(isControlled ? "un" : "", "controlled."), "Elements should not switch from uncontrolled to controlled (or vice versa).", "Decide between using a controlled or uncontrolled ".concat(name, " ") + "element for the lifetime of the component.", "The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.", "More info: https://fb.me/react-controlled-components"].join("\n"));
      }
    }, [controlled]);
    var _React$useRef2 = React4.useRef(defaultProp), defaultValue = _React$useRef2.current;
    React4.useEffect(function() {
      if (!isControlled && defaultValue !== defaultProp) {
        console.error(["Material-UI: A component is changing the default ".concat(state, " state of an uncontrolled ").concat(name, " after being initialized. ") + "To suppress this warning opt to use a controlled ".concat(name, ".")].join("\n"));
      }
    }, [JSON.stringify(defaultProp)]);
  }
  var setValueIfUncontrolled = React4.useCallback(function(newValue) {
    if (!isControlled) {
      setValue(newValue);
    }
  }, []);
  return [value, setValueIfUncontrolled];
}

// node_modules/@material-ui/core/esm/utils/unstable_useId.js
init_define_process_env();
var React5 = __toModule(require_react());
function useId(idOverride) {
  var _React$useState = React5.useState(idOverride), defaultId = _React$useState[0], setDefaultId = _React$useState[1];
  var id = idOverride || defaultId;
  React5.useEffect(function() {
    if (defaultId == null) {
      setDefaultId("mui-".concat(Math.round(Math.random() * 1e5)));
    }
  }, [defaultId]);
  return id;
}

// node_modules/@material-ui/core/esm/utils/index.js
init_define_process_env();

// node_modules/@material-ui/core/esm/Collapse/Collapse.js
init_define_process_env();
init_extends();
var React6 = __toModule(require_react());
init_clsx_m();
var import_prop_types2 = __toModule(require_prop_types());

// node_modules/@material-ui/core/esm/transitions/utils.js
init_define_process_env();
var reflow = function reflow2(node) {
  return node.scrollTop;
};
function getTransitionProps(props, options) {
  var timeout = props.timeout, _props$style = props.style, style = _props$style === void 0 ? {} : _props$style;
  return {
    duration: style.transitionDuration || typeof timeout === "number" ? timeout : timeout[options.mode] || 0,
    delay: style.transitionDelay
  };
}

// node_modules/@material-ui/core/esm/Collapse/Collapse.js
var styles3 = function styles4(theme) {
  return {
    root: {
      height: 0,
      overflow: "hidden",
      transition: theme.transitions.create("height")
    },
    entered: {
      height: "auto",
      overflow: "visible"
    },
    hidden: {
      visibility: "hidden"
    },
    wrapper: {
      display: "flex"
    },
    wrapperInner: {
      width: "100%"
    }
  };
};
var Collapse = React6.forwardRef(function Collapse2(props, ref) {
  var children = props.children, classes = props.classes, className = props.className, collapsedHeight = props.collapsedHeight, _props$collapsedSize = props.collapsedSize, collapsedSizeProp = _props$collapsedSize === void 0 ? "0px" : _props$collapsedSize, _props$component = props.component, Component = _props$component === void 0 ? "div" : _props$component, _props$disableStrictM = props.disableStrictModeCompat, disableStrictModeCompat = _props$disableStrictM === void 0 ? false : _props$disableStrictM, inProp = props.in, onEnter = props.onEnter, onEntered = props.onEntered, onEntering = props.onEntering, onExit = props.onExit, onExited = props.onExited, onExiting = props.onExiting, style = props.style, _props$timeout = props.timeout, timeout = _props$timeout === void 0 ? duration.standard : _props$timeout, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Transition_default : _props$TransitionComp, other = _objectWithoutProperties(props, ["children", "classes", "className", "collapsedHeight", "collapsedSize", "component", "disableStrictModeCompat", "in", "onEnter", "onEntered", "onEntering", "onExit", "onExited", "onExiting", "style", "timeout", "TransitionComponent"]);
  var theme = useTheme();
  var timer = React6.useRef();
  var wrapperRef = React6.useRef(null);
  var autoTransitionDuration = React6.useRef();
  var collapsedSize = typeof (collapsedHeight || collapsedSizeProp) === "number" ? "".concat(collapsedHeight || collapsedSizeProp, "px") : collapsedHeight || collapsedSizeProp;
  React6.useEffect(function() {
    return function() {
      clearTimeout(timer.current);
    };
  }, []);
  var enableStrictModeCompat = theme.unstable_strictMode && !disableStrictModeCompat;
  var nodeRef = React6.useRef(null);
  var handleRef = useForkRef(ref, enableStrictModeCompat ? nodeRef : void 0);
  var normalizedTransitionCallback = function normalizedTransitionCallback2(callback) {
    return function(nodeOrAppearing, maybeAppearing) {
      if (callback) {
        var _ref = enableStrictModeCompat ? [nodeRef.current, nodeOrAppearing] : [nodeOrAppearing, maybeAppearing], _ref2 = _slicedToArray(_ref, 2), node = _ref2[0], isAppearing = _ref2[1];
        if (isAppearing === void 0) {
          callback(node);
        } else {
          callback(node, isAppearing);
        }
      }
    };
  };
  var handleEnter = normalizedTransitionCallback(function(node, isAppearing) {
    node.style.height = collapsedSize;
    if (onEnter) {
      onEnter(node, isAppearing);
    }
  });
  var handleEntering = normalizedTransitionCallback(function(node, isAppearing) {
    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
    var _getTransitionProps = getTransitionProps({
      style,
      timeout
    }, {
      mode: "enter"
    }), transitionDuration = _getTransitionProps.duration;
    if (timeout === "auto") {
      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
      node.style.transitionDuration = "".concat(duration2, "ms");
      autoTransitionDuration.current = duration2;
    } else {
      node.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : "".concat(transitionDuration, "ms");
    }
    node.style.height = "".concat(wrapperHeight, "px");
    if (onEntering) {
      onEntering(node, isAppearing);
    }
  });
  var handleEntered = normalizedTransitionCallback(function(node, isAppearing) {
    node.style.height = "auto";
    if (onEntered) {
      onEntered(node, isAppearing);
    }
  });
  var handleExit = normalizedTransitionCallback(function(node) {
    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
    node.style.height = "".concat(wrapperHeight, "px");
    if (onExit) {
      onExit(node);
    }
  });
  var handleExited = normalizedTransitionCallback(onExited);
  var handleExiting = normalizedTransitionCallback(function(node) {
    var wrapperHeight = wrapperRef.current ? wrapperRef.current.clientHeight : 0;
    var _getTransitionProps2 = getTransitionProps({
      style,
      timeout
    }, {
      mode: "exit"
    }), transitionDuration = _getTransitionProps2.duration;
    if (timeout === "auto") {
      var duration2 = theme.transitions.getAutoHeightDuration(wrapperHeight);
      node.style.transitionDuration = "".concat(duration2, "ms");
      autoTransitionDuration.current = duration2;
    } else {
      node.style.transitionDuration = typeof transitionDuration === "string" ? transitionDuration : "".concat(transitionDuration, "ms");
    }
    node.style.height = collapsedSize;
    if (onExiting) {
      onExiting(node);
    }
  });
  var addEndListener = function addEndListener2(nodeOrNext, maybeNext) {
    var next = enableStrictModeCompat ? nodeOrNext : maybeNext;
    if (timeout === "auto") {
      timer.current = setTimeout(next, autoTransitionDuration.current || 0);
    }
  };
  return React6.createElement(TransitionComponent, _extends({
    in: inProp,
    onEnter: handleEnter,
    onEntered: handleEntered,
    onEntering: handleEntering,
    onExit: handleExit,
    onExited: handleExited,
    onExiting: handleExiting,
    addEndListener,
    nodeRef: enableStrictModeCompat ? nodeRef : void 0,
    timeout: timeout === "auto" ? null : timeout
  }, other), function(state, childProps) {
    return React6.createElement(Component, _extends({
      className: clsx_m_default(classes.root, classes.container, className, {
        "entered": classes.entered,
        "exited": !inProp && collapsedSize === "0px" && classes.hidden
      }[state]),
      style: _extends({
        minHeight: collapsedSize
      }, style),
      ref: handleRef
    }, childProps), React6.createElement("div", {
      className: classes.wrapper,
      ref: wrapperRef
    }, React6.createElement("div", {
      className: classes.wrapperInner
    }, children)));
  });
});
true ? Collapse.propTypes = {
  children: import_prop_types2.default.node,
  classes: chainPropTypes(import_prop_types2.default.object, function(props) {
    if (props.classes && props.classes.container) {
      throw new Error(["Material-UI: the classes.container key is deprecated.", "Use `classes.root` instead", "The name of the pseudo-class was changed for consistency."].join("\n"));
    }
    return null;
  }),
  className: import_prop_types2.default.string,
  collapsedHeight: deprecatedPropType(import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.string]), "The prop was renamed to support the vertical orientation, use `collapsedSize` instead"),
  collapsedSize: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.string]),
  component: import_prop_types2.default.elementType,
  disableStrictModeCompat: import_prop_types2.default.bool,
  in: import_prop_types2.default.bool,
  onEnter: import_prop_types2.default.func,
  onEntered: import_prop_types2.default.func,
  onEntering: import_prop_types2.default.func,
  onExit: import_prop_types2.default.func,
  onExited: import_prop_types2.default.func,
  onExiting: import_prop_types2.default.func,
  style: import_prop_types2.default.object,
  timeout: import_prop_types2.default.oneOfType([import_prop_types2.default.oneOf(["auto"]), import_prop_types2.default.number, import_prop_types2.default.shape({
    appear: import_prop_types2.default.number,
    enter: import_prop_types2.default.number,
    exit: import_prop_types2.default.number
  })])
} : void 0;
Collapse.muiSupportAuto = true;
var Collapse_default = withStyles_default(styles3, {
  name: "MuiCollapse"
})(Collapse);

// node_modules/@material-ui/core/esm/Collapse/index.js
init_define_process_env();

// node_modules/@material-ui/core/esm/Paper/Paper.js
init_define_process_env();
init_extends();
var React7 = __toModule(require_react());
var import_prop_types3 = __toModule(require_prop_types());
init_clsx_m();
var styles5 = function styles6(theme) {
  var elevations = {};
  theme.shadows.forEach(function(shadow, index) {
    elevations["elevation".concat(index)] = {
      boxShadow: shadow
    };
  });
  return _extends({
    root: {
      backgroundColor: theme.palette.background.paper,
      color: theme.palette.text.primary,
      transition: theme.transitions.create("box-shadow")
    },
    rounded: {
      borderRadius: theme.shape.borderRadius
    },
    outlined: {
      border: "1px solid ".concat(theme.palette.divider)
    }
  }, elevations);
};
var Paper = React7.forwardRef(function Paper2(props, ref) {
  var classes = props.classes, className = props.className, _props$component = props.component, Component = _props$component === void 0 ? "div" : _props$component, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$elevation = props.elevation, elevation = _props$elevation === void 0 ? 1 : _props$elevation, _props$variant = props.variant, variant = _props$variant === void 0 ? "elevation" : _props$variant, other = _objectWithoutProperties(props, ["classes", "className", "component", "square", "elevation", "variant"]);
  return React7.createElement(Component, _extends({
    className: clsx_m_default(classes.root, className, variant === "outlined" ? classes.outlined : classes["elevation".concat(elevation)], !square && classes.rounded),
    ref
  }, other));
});
true ? Paper.propTypes = {
  children: import_prop_types3.default.node,
  classes: import_prop_types3.default.object,
  className: import_prop_types3.default.string,
  component: import_prop_types3.default.elementType,
  elevation: chainPropTypes(import_prop_types3.default.number, function(props) {
    var classes = props.classes, elevation = props.elevation;
    if (classes === void 0) {
      return null;
    }
    if (elevation != null && classes["elevation".concat(elevation)] === void 0) {
      return new Error("Material-UI: This elevation `".concat(elevation, "` is not implemented."));
    }
    return null;
  }),
  square: import_prop_types3.default.bool,
  variant: import_prop_types3.default.oneOf(["elevation", "outlined"])
} : void 0;
var Paper_default = withStyles_default(styles5, {
  name: "MuiPaper"
})(Paper);

// node_modules/@material-ui/core/esm/Paper/index.js
init_define_process_env();

// node_modules/@material-ui/core/esm/Accordion/Accordion.js
init_define_process_env();
init_extends();

// node_modules/@babel/runtime/helpers/esm/toArray.js
init_define_process_env();
function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();
}

// node_modules/@material-ui/core/esm/Accordion/Accordion.js
var React8 = __toModule(require_react());
var import_react_is = __toModule(require_react_is());
var import_prop_types4 = __toModule(require_prop_types());
init_clsx_m();
var styles7 = function styles8(theme) {
  var transition = {
    duration: theme.transitions.duration.shortest
  };
  return {
    root: {
      position: "relative",
      transition: theme.transitions.create(["margin"], transition),
      "&:before": {
        position: "absolute",
        left: 0,
        top: -1,
        right: 0,
        height: 1,
        content: '""',
        opacity: 1,
        backgroundColor: theme.palette.divider,
        transition: theme.transitions.create(["opacity", "background-color"], transition)
      },
      "&:first-child": {
        "&:before": {
          display: "none"
        }
      },
      "&$expanded": {
        margin: "16px 0",
        "&:first-child": {
          marginTop: 0
        },
        "&:last-child": {
          marginBottom: 0
        },
        "&:before": {
          opacity: 0
        }
      },
      "&$expanded + &": {
        "&:before": {
          display: "none"
        }
      },
      "&$disabled": {
        backgroundColor: theme.palette.action.disabledBackground
      }
    },
    rounded: {
      borderRadius: 0,
      "&:first-child": {
        borderTopLeftRadius: theme.shape.borderRadius,
        borderTopRightRadius: theme.shape.borderRadius
      },
      "&:last-child": {
        borderBottomLeftRadius: theme.shape.borderRadius,
        borderBottomRightRadius: theme.shape.borderRadius,
        "@supports (-ms-ime-align: auto)": {
          borderBottomLeftRadius: 0,
          borderBottomRightRadius: 0
        }
      }
    },
    expanded: {},
    disabled: {}
  };
};
var Accordion = React8.forwardRef(function Accordion2(props, ref) {
  var childrenProp = props.children, classes = props.classes, className = props.className, _props$defaultExpande = props.defaultExpanded, defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande, _props$disabled = props.disabled, disabled = _props$disabled === void 0 ? false : _props$disabled, expandedProp = props.expanded, onChange = props.onChange, _props$square = props.square, square = _props$square === void 0 ? false : _props$square, _props$TransitionComp = props.TransitionComponent, TransitionComponent = _props$TransitionComp === void 0 ? Collapse_default : _props$TransitionComp, TransitionProps = props.TransitionProps, other = _objectWithoutProperties(props, ["children", "classes", "className", "defaultExpanded", "disabled", "expanded", "onChange", "square", "TransitionComponent", "TransitionProps"]);
  var _useControlled = useControlled({
    controlled: expandedProp,
    default: defaultExpanded,
    name: "Accordion",
    state: "expanded"
  }), _useControlled2 = _slicedToArray(_useControlled, 2), expanded = _useControlled2[0], setExpandedState = _useControlled2[1];
  var handleChange = React8.useCallback(function(event) {
    setExpandedState(!expanded);
    if (onChange) {
      onChange(event, !expanded);
    }
  }, [expanded, onChange, setExpandedState]);
  var _React$Children$toArr = React8.Children.toArray(childrenProp), _React$Children$toArr2 = _toArray(_React$Children$toArr), summary = _React$Children$toArr2[0], children = _React$Children$toArr2.slice(1);
  var contextValue = React8.useMemo(function() {
    return {
      expanded,
      disabled,
      toggle: handleChange
    };
  }, [expanded, disabled, handleChange]);
  return React8.createElement(Paper_default, _extends({
    className: clsx_m_default(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),
    ref,
    square
  }, other), React8.createElement(AccordionContext_default.Provider, {
    value: contextValue
  }, summary), React8.createElement(TransitionComponent, _extends({
    in: expanded,
    timeout: "auto"
  }, TransitionProps), React8.createElement("div", {
    "aria-labelledby": summary.props.id,
    id: summary.props["aria-controls"],
    role: "region"
  }, children)));
});
true ? Accordion.propTypes = {
  children: chainPropTypes(import_prop_types4.default.node.isRequired, function(props) {
    var summary = React8.Children.toArray(props.children)[0];
    if ((0, import_react_is.isFragment)(summary)) {
      return new Error("Material-UI: The Accordion doesn't accept a Fragment as a child. Consider providing an array instead.");
    }
    if (!React8.isValidElement(summary)) {
      return new Error("Material-UI: Expected the first child of Accordion to be a valid element.");
    }
    return null;
  }),
  classes: import_prop_types4.default.object,
  className: import_prop_types4.default.string,
  defaultExpanded: import_prop_types4.default.bool,
  disabled: import_prop_types4.default.bool,
  expanded: import_prop_types4.default.bool,
  onChange: import_prop_types4.default.func,
  square: import_prop_types4.default.bool,
  TransitionComponent: import_prop_types4.default.elementType,
  TransitionProps: import_prop_types4.default.object
} : void 0;
var Accordion_default = withStyles_default(styles7, {
  name: "MuiAccordion"
})(Accordion);

// node_modules/@material-ui/core/esm/Accordion/index.js
init_define_process_env();

export {
  _toArray,
  reflow,
  getTransitionProps,
  createChainedFunction,
  SvgIcon_default,
  createSvgIcon,
  debounce,
  isMuiElement,
  ownerDocument,
  ownerWindow,
  requirePropFactory,
  unsupportedProp,
  useControlled,
  useId,
  Collapse_default,
  Paper_default,
  Accordion_default
};
//# sourceMappingURL=chunk-YOJILOS6.js.map
